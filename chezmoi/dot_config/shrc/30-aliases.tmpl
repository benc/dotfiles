#!/bin/bash
alias ls="eza --icons=always"
alias ll="eza --icons=always --long --all --group --git --group-directories-first"
alias cat="bat --paging never"
alias top="btop"
alias grep="batgrep --ignore-case --hidden"
alias find="fd"
alias ps="procs"
alias codei="code-insiders"
alias du="dust"
alias df="duf"
alias dig="doggo"
alias ping="prettyping --nolegend"
alias nuke_modules="rm -rf node_modules; npm install; npm prune"
alias mpvr="mpv --script-opts=360plugin-enabled=yes --panscan=1 --geometry=600x600 --volume=100"
alias docker-recompose="docker compose stop && docker compose rm --force && docker compose pull && docker compose build --no-cache --pull && docker compose up --remove-orphans --force-recreate -d"

fkill() {
  pid=$(ps -ef | sed 1d | fzf -m --ansi --color fg:-1,bg:-1,hl:46,fg+:40,bg+:233,hl+:46 --color prompt:166,border:46 --height 40% --border=sharp --prompt="➤  " --pointer="➤ " --marker="➤ " | awk '{print $2}')

  if [ "x$pid" != "x" ]; then
    kill -${1:-9} $pid
  fi
}

list-videos-by-codec() {
  local mode=$1
  local operator

  if [ "$mode" = "ios" ]; then
    operator=""
  elif [ "$mode" = "non-ios" ]; then
    operator="!"
  else
    echo "Usage: list-videos-by-codec [ios|non-ios]" >&2
    return 1
  fi

  fd -t f -e mp4 -e mkv -e avi -e mov -x sh -c \
    "codec=\$(ffprobe -v quiet -select_streams v:0 -show_entries stream=codec_name -of default=noprint_wrappers=1:nokey=1 \"{}\"); \
    if $operator echo \"\$codec\" | rg -i \"h264|avc|hevc\" >/dev/null; then echo \"\$codec - {}\" ; fi" | sort
}

list-non-ios-encoded-videos() { list-videos-by-codec non-ios; }
list-ios-encoded-videos() { list-videos-by-codec ios; }

encode-ios-video() {
  nice -n 19 ffmpeg -i "$1" \
    -vf "fps=30,scale=w=-2:h='min(1920,ih)':sws_flags=spline+accurate_rnd:in_range=tv:out_range=tv" \
    -c:v hevc_videotoolbox \
    -profile:v main \
    -alpha_quality 0.9 \
    -tag:v hvc1 \
    -b:v 8M \
    -allow_sw 0 \
    -pix_fmt yuv420p \
    -ac 2 \
    -c:a aac \
    -b:a 192k \
    -movflags +faststart \
    "${1%.*}.ios.mp4"
}

compress-video() {
  nice -n 19 ffmpeg -i "$1" \
    -vf fftdnoiz=sigma=3 \
    -pix_fmt yuv420p \
    -c:v libx264 \
    -level 4.0 \
    -preset veryslow \
    "${1%.*}.compressed.mp4"
}

batch-encode-ios-videos() {
  list-non-ios-encoded-videos | while IFS= read -r line; do
    filename="${line#* - }"  # Remove "codec - " prefix
    echo "Converting: $filename"
    encode-ios-video "$filename"
    if [ $? -eq 0 ]; then
      echo "Successfully converted: $filename"
    else
      echo "Failed to convert: $filename"
    fi
  done
}

tag-video-with-h265() {
  ffmpeg -i "$1" \
    -c:v copy \
    -tag:v hvc1 \
    -c:a copy \
    "${1%.*}.h265.mp4"
}

jkill() {
  jps -l | grep "$1" | awk '{print $1}' | xargs kill -9
}

select_file() {
  given_file="$1"
  fd --type file --follow --hidden --exclude .git | fzf --query="$given_file"
}
