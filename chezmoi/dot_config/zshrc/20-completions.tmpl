#!/usr/bin/env zsh
{{ if eq .chezmoi.os "darwin" -}}
if (( ${+commands[brew]} )); then
  fpath+="$(brew --prefix)/share/zsh/site-functions"
  fpath+="$(brew --prefix)/share/zsh-completions"
fi
{{ end -}}

if (( ${+commands[mise]} )); then
  eval "$(mise completion zsh)"
fi

if (( ${+commands[pipenv]} )); then
  eval "$(_PIPENV_COMPLETE=zsh_source pipenv)"
fi

if (( ${+commands[pip]} )); then
  eval "$(pip completion --zsh)"
fi

if (( ${+commands[comfy]} )); then
  autoload -Uz compinit

  # Define custom completion for comfy
  # Ensure that _comfy_completion is defined after compinit
  _comfy_completion() {
    eval $(env _TYPER_COMPLETE_ARGS="${words[1,$CURRENT]}" _COMFY_COMPLETE=complete_zsh comfy)
  }

  # Bind the completion function to the comfy command
  compdef _comfy_completion comfy

  # Other configurations (e.g., aliases, prompt, etc.)
  zstyle ':completion:*' menu select
fi

if (( ${+commands[chezmoi]} )); then
  eval "$(chezmoi completion zsh)"
fi

if (( ${+commands[op]} )); then
  eval "$(op completion zsh)"
fi

if (( ${+commands[aws]} )); then
  complete -C "$(brew --prefix)/bin/aws_completer" aws
fi

if (( ${+commands[kubectl]} )); then
  eval "$(kubectl completion zsh)"
fi

if (( ${+commands[helm]} )); then
  # shellcheck source=/opt/homebrew/bin/helm
  source <(helm completion zsh)
fi

if (( ${+commands[pixi]} )); then
  eval "$(pixi completion --shell zsh)"
fi
