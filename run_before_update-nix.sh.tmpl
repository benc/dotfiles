#!/bin/bash

{{ if .os.linux -}}
echo "üí° Updating apt..."
sudo apt update; sudo apt upgrade -y

eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
{{ end -}}

{{ if .os.macos -}}
softwareupdate --install --all --verbose;
mas upgrade;
{{ end -}}

echo "üí° Updating homebrew..."
brew update; HOMEBREW_NO_ENV_HINTS=true brew upgrade

# {{ if .os.macos -}}
# HOMEBREW_NO_ENV_HINTS=true brew outdated --cask --greedy --verbose | grep -v \"\(latest\)\" | cut -f1 -d\" \" | xargs brew reinstall --cask
# {{ end -}}

echo "üí° Updating sdkman..."
. "${HOME}/.sdkman/bin/sdkman-init.sh"
sdk update; sdk upgrade

if command -v docker >/dev/null 2>&1; then
    echo "üí° Updating portainer agent..."
    # Docker commands
    docker stop portainer_agent
    docker rm portainer_agent
    docker pull portainer/agent:latest
    docker run -d -p 9001:9001 --name portainer_agent --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v /var/lib/docker/volumes:/var/lib/docker/volumes portainer/agent:latest
else
    echo "‚ö†Ô∏è Docker is not installed or not found in the path. Please install Docker."
fi
op_account_size="$(op account list --format=json | jq -r '. | length')"

if [[ "${op_account_size}" == "0" ]]; then
    echo "‚ö†Ô∏è 1password is not configured, run this command to set it up:"
    echo
    echo "   op account add --address $SUBDOMAIN.1password.com --email $LOGIN"
    echo
    exit 1
fi

eval $(op signin)
