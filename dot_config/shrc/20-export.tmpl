#!/bin/bash

# Homebrew
if [ -f "/usr/local/bin/brew" ]; then
  export PATH="/usr/local/bin:/usr/local/sbin:$PATH"
fi

if [ -f "/opt/homebrew/bin/brew" ]; then
  export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
fi

if [ -f "/opt/linuxbrew/bin/brew" ]; then
  export PATH="/opt/linuxbrew/bin:/opt/linuxbrew/sbin:$PATH"
fi

{{- if and (.chezmoi.osRelease) ( contains "wsl" ( lower .chezmoi.kernel.osrelease )) -}}
# The boot.systemd in /etc/wsl.conf is only for Windows 11, so this workaround is needed
if service docker status 2>&1 | grep -q "is not running"; then
  wsl.exe -d "${WSL_DISTRO_NAME?}" -u root -e /usr/sbin/service docker start >/dev/null 2>&1
fi
{{ end }}

# ASDF
. "$HOME/.asdf/asdf.sh"
export PATH="$HOME/.asdf/shims:$PATH"

# NodeJS
export PATH="./node_modules/.bin:$PATH"

# Postgres
if [ -r "$(brew --prefix libpq)" ]; then
  export PATH="$(brew --prefix libpq)/bin:${PATH}"
fi

# kubernetes-cli
if [ -r "$(brew --prefix kubernetes-cli)" ]; then
  export PATH="$(brew --prefix kubernetes-cli)/bin:${PATH}"
fi

# Local binaries
export PATH="./.local/bin/:$PATH"

if [ -d "${HOME}/.local/bin" ]; then
  export PATH="${HOME}/.local/bin:${PATH}"
fi

if [ -d "${HOME}/bin" ]; then
  export PATH="${HOME}/bin:${PATH}"
fi

if [ -d "${HOME}/bin" ]; then
  export PATH="${HOME}/bin:${PATH}"
fi

# add local commands to PATH
export PATH=./bin:$PATH

export VISUAL="{{ .editor }}"
export EDITOR="{{ .editor }}"

{{- if and (.chezmoi.osRelease) ( contains "wsl" ( lower .chezmoi.kernel.osrelease )) -}}
export BROWSER="wslview"
{{ end }}

# SBT
export SBT_CREDENTIALS=~/.ivy2/.credentials
